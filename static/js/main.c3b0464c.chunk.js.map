{"version":3,"sources":["app/hooks.ts","features/bank/bankSlice.ts","features/bank/bankInfo.ts","features/description/descriptionSlice.ts","features/power/powerSlice.ts","features/volumeSlice.ts","components/DrumControl.tsx","components/DrumButton.tsx","components/DrumPad.tsx","components/Drum.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","banks","bankPiano","keyCode","keyTrigger","id","url","bankHeater","kit","bankSlice","createSlice","name","reducers","toggleBank","state","selectBankKit","bank","selectBankPiano","selectBankHeater","actions","descriptionSlice","value","changeDescription","action","payload","selectDescription","description","powerSlice","togglePower","selectPower","power","volumeSlice","changeVolume","selectVolume","volume","DrumControl","dispatch","useEffect","setTimeout","displayString","split","map","str","charAt","toUpperCase","slice","join","className","onClick","type","defaultChecked","min","max","step","defaultValue","onChange","e","target","valueAsNumber","toFixed","handleVolumeRange","DrumButton","props","useState","isPressed","setIsPressed","playAudio","audio","document","getElementById","currentTime","play","displayId","activateButton","handleKeyDown","key","toLowerCase","window","addEventListener","removeEventListener","children","src","DrumPad","Drum","App","store","configureStore","reducer","powerReducer","bankReducer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3b0464c.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { bankTwo, bankOne } from \"./bankInfo\";\nimport { BankState } from \"./bankType\";\n\nconst initialState: BankState = {\n  banks: {\n    bankPiano: bankTwo,\n    bankHeater: bankOne,\n  },\n  kit: 'smooth-piano-kit',\n}\n\nconst bankSlice = createSlice({\n  name: 'bank',\n  initialState,\n  reducers: {\n    toggleBank: state => {\n      switch(state.kit) {\n        case 'smooth-piano-kit':\n          state.kit = 'heater-kit'\n          break\n        case 'heater-kit':\n          state.kit = 'smooth-piano-kit'\n          break\n      }\n    },\n  },\n})\n\nexport const selectBankKit = (state: RootState) => state.bank.kit\nexport const selectBankPiano = (state: RootState) => state.bank.banks.bankPiano\nexport const selectBankHeater = (state: RootState) => state.bank.banks.bankHeater\nexport const { toggleBank } = bankSlice.actions\nexport default bankSlice.reducer","import { BankPayload } from \"./bankType\";\n\nexport const bankOne: BankPayload[] = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  }\n];\n\nexport const bankTwo: BankPayload[] = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Chord-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Chord-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Chord-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Shaker',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: 'Punchy-Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Side-Stick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Snare',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n  }\n]","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\n\nconst descriptionSlice = createSlice({\n  name: 'description',\n  initialState: {\n    value: ''\n  },\n  reducers: {\n    changeDescription: (state, action: PayloadAction<string>) => {\n      state.value = action.payload\n    }\n  }\n})\n\nexport const selectDescription = (state: RootState) => state.description.value\nexport const { changeDescription } = descriptionSlice.actions\nexport default descriptionSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\n\nconst powerSlice = createSlice({\n  name: 'power',\n  initialState: {\n    value: true\n  },\n  reducers: {\n    togglePower: state => {\n      state.value = !state.value\n    }\n  }\n})\n\nexport const selectPower = (state: RootState) => state.power.value\nexport const { togglePower } = powerSlice.actions\nexport default powerSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\n\nconst volumeSlice = createSlice({\n  name: 'volume',\n  initialState: {\n    value: 0.64\n  },\n  reducers: {\n    changeVolume: (state, action) => {\n      state.value = action.payload\n    }\n  }\n})\n\nexport const selectVolume = (state: RootState) => state.volume.value\nexport const { changeVolume } = volumeSlice.actions\nexport default volumeSlice.reducer","import { useEffect } from \"react\"\nimport { useAppSelector, useAppDispatch } from \"../app/hooks\"\nimport { selectBankKit, toggleBank } from \"../features/bank/bankSlice\"\nimport { changeDescription, selectDescription } from \"../features/description/descriptionSlice\"\nimport { selectPower, togglePower } from \"../features/power/powerSlice\"\nimport { changeVolume, selectVolume } from \"../features/volumeSlice\"\n\nexport const DrumControl = () => {\n  const kit = useAppSelector(selectBankKit)\n  const power = useAppSelector(selectPower)\n  const description = useAppSelector(selectDescription)\n  const volume = useAppSelector(selectVolume)\n  const dispatch = useAppDispatch()\n\n  const handleVolumeRange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(changeVolume(e.target.valueAsNumber))\n    dispatch(changeDescription(`Volume: ${(e.target.valueAsNumber*100).toFixed()}`))\n  }\n\n  const handlePower = () => {\n    dispatch(togglePower())\n    dispatch(changeDescription(''))\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(changeDescription(''))\n    }, 1000)\n  }, [volume, dispatch, kit])\n\n  useEffect(() => {\n    const displayString = kit.split('-').map( str => str.charAt(0).toUpperCase() + str.slice(1)).join(' ')\n    dispatch(changeDescription(displayString))\n  }, [kit, dispatch])\n\n  return (\n    <div className=\"mt-20 md:mt-10 text-center md:ml-auto\">\n      <div className=\"flex flex-col items-center\">\n        <span className=\"text-xs\">Power</span>\n        <div className=\"select-none relative w-9\" onClick={handlePower}>\n          <input type=\"checkbox\"\n          className={`cursor-pointer appearance-none absolute bg-blue w-5 h-4 border-2 border-current ${power ? 'right-0' : 'left-0'}`}\n          defaultChecked={power}/>\n          <label className=\"cursor-pointer bg-black block h-4\"></label>\n        </div>\n      </div>\n      <div className=\"mt-2 h-8 bg-grey w-4/6 mx-auto table\">\n        <span className=\"align-middle table-cell\">{description}</span>\n      </div>\n      <div className={`mt-4 ${power ? '' : 'pointer-events-none'}`}>\n        <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" defaultValue={volume} onChange={(e) => handleVolumeRange(e)}\n        className=\"appearance-none w-3/4 cursor-pointer bg-charcoal h-2 shadow-sm-lr\"/>\n      </div>\n      <div className={`mt-2 flex flex-col items-center ${power ? '' : 'pointer-events-none'}`}>\n        <span className=\"text-xs\">Bank</span>\n        <div className=\"select-none relative w-9\" onClick={() => dispatch(toggleBank())}>\n          <input type=\"checkbox\"\n          className={`cursor-pointer appearance-none absolute bg-blue w-5 h-4 border-2 border-current ${kit === 'smooth-piano-kit' ? 'right-0' : 'left-0'}`}\n          defaultChecked={kit === 'smooth-piano-kit'}/>\n          <label className=\"cursor-pointer bg-black block h-4\"></label>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\"\nimport { BankPayload } from \"../features/bank/bankType\"\nimport { changeDescription } from \"../features/description/descriptionSlice\"\nimport { selectPower } from \"../features/power/powerSlice\"\nimport { selectVolume } from \"../features/volumeSlice\"\n\nexport const DrumButton = (props: DrumButtonProps) => {\n  const power = useAppSelector(selectPower)\n  const volume = useAppSelector(selectVolume)\n  const dispatch = useAppDispatch()\n  const [isPressed, setIsPressed] = useState(false)\n\n  const playAudio = () => {\n    const audio = document.getElementById(props.bank.keyTrigger) as HTMLAudioElement\n    audio.currentTime = 0\n    audio.volume = volume\n    audio.play()\n  }\n\n  const displayId = () => {\n    dispatch(changeDescription(props.bank.id.split('-').join(' ')))\n  }\n\n  const activateButton = () => {\n    setIsPressed(true)\n    setTimeout(() => {\n      setIsPressed(false)\n    }, 100)\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key.toLowerCase() === props.bank.keyTrigger.toLowerCase()) {\n        if (power) {\n          playAudio()\n          displayId()\n        }\n        activateButton()\n      }\n    }\n    window.addEventListener('keydown', handleKeyDown)\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  })\n\n  const handleClick = () => {\n    if (power) {\n      playAudio()\n      displayId()\n    }\n    activateButton()\n  }\n\n  return (\n    <div\n      id={`drum-pad-${props.children}`}\n      onClick={handleClick}\n      className={`drum-pad h-14 w-16 p-4 text-center rounded ${isPressed ? 'bg-yellow-400' : 'bg-grey shadow-xl-rb'}`}>\n      <span>{props.children}</span>\n      <audio src={props.bank.url} className=\"clip\" id={props.bank.keyTrigger}></audio>\n    </div>\n  )\n}\n\ntype DrumButtonProps = {\n  children: string,\n  bank:     BankPayload,\n}","import { useAppSelector } from '../app/hooks'\nimport { selectBankHeater, selectBankKit, selectBankPiano } from '../features/bank/bankSlice'\nimport { DrumButton } from './DrumButton'\n\nexport const DrumPad = () => {\n  const kit = useAppSelector(selectBankKit)\n  const bankPiano = useAppSelector(selectBankPiano)\n  const bankHeater = useAppSelector(selectBankHeater)\n\n  return (\n    <div className=\"grid grid-cols-3 grid-rows-3 gap-2 md:ml-auto md:my-auto\">\n      {(() => {\n        switch(kit) {\n          case 'smooth-piano-kit':\n            return bankPiano.map((bank) => \n              <DrumButton bank={bank} key={bank.keyCode}>{bank.keyTrigger}</DrumButton>\n            )\n          case 'heater-kit':\n            return bankHeater.map((bank) => \n              <DrumButton bank={bank} key={bank.keyCode}>{bank.keyTrigger}</DrumButton>\n            )\n        }\n      })()}\n    </div>\n  )\n}\n","import { FaFreeCodeCamp } from 'react-icons/fa' \nimport { DrumControl } from './DrumControl'\nimport { DrumPad } from './DrumPad'\n\n\n\nexport const Drum = () => {\n  return (\n    <div className=\"h-4/6 md:h-80 border-4 w-9/12 md:w-124 m-auto mt-28 border-yellow-400 bg-dark-gray\" id=\"drum-machine\">\n      <div className=\"flex justify-end items-center italic font-bold mb-2\">\n        <span className=\"text-lg\">FCC</span>\n        <span className=\"inline text-2xl pl-2 pr-1\">\n          <FaFreeCodeCamp />\n        </span>\n      </div>\n      <div className=\"w-60 md:w-11/12 m-auto flex flex-col h-5/6 md:flex-row\" id=\"display\">\n        <DrumPad />\n        <DrumControl />\n      </div>\n    </div>\n  )\n}\n","import { Drum } from './components/Drum';\n\nfunction App() {\n  return (\n    <div className=\"App bg-suva-grey w-full h-full absolute font-russo-one min-w-sm\">\n      <Drum />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport powerReducer from '../features/power/powerSlice'\nimport bankReducer from '../features/bank/bankSlice'\nimport descriptionSlice from '../features/description/descriptionSlice'\nimport volumeSlice from '../features/volumeSlice';\n\nexport const store = configureStore({\n  reducer: {\n    power: powerReducer,\n    bank: bankReducer,\n    description: descriptionSlice,\n    volume: volumeSlice,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}